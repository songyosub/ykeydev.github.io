{"version":3,"sources":["Header.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","appBar","backgroundColor","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","Header","classes","React","useState","open","setOpen","className","AppBar","position","clsx","appBarShift","Toolbar","toolbar","Typography","component","variant","color","noWrap","title","IconButton","edge","aria-label","onClick","menuButton","menuButtonHidden","App","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTASMA,EAAYC,aAAW,SAACC,GAAD,MAAW,CACpCC,KAAM,CACFC,QAAS,QAEXC,OAAQ,CACNC,gBAAkB,cAClBC,OAAQL,EAAMK,OAAOC,OAAS,EAC9BC,WAAYP,EAAMQ,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQV,EAAMQ,YAAYE,OAAOC,MACjCC,SAAUZ,EAAMQ,YAAYI,SAASC,qBAoC9BC,MA9BjB,WACI,IAAMC,EAAUjB,IADF,EAEUkB,IAAMC,UAAS,GAFzB,mBAEPC,EAFO,KAEDC,EAFC,KASd,OACE,qBAAKC,UAAU,SAAf,SACE,cAACC,EAAA,EAAD,CAAQC,SAAS,WAAWF,UAAWG,YAAKR,EAAQZ,OAAQe,GAAQH,EAAQS,aAA5E,SACA,eAACC,EAAA,EAAD,CAASL,UAAWL,EAAQW,QAA5B,UACK,cAACC,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKC,MAAM,UAAUC,QAAM,EAACX,UAAWL,EAAQiB,MAAlF,4BAGH,cAACC,EAAA,EAAD,CACEC,KAAK,MACLJ,MAAM,UACNK,aAAW,cACXC,QAjBiB,WACvBjB,GAAQ,IAiBFC,UAAWG,YAAKR,EAAQsB,WAAYnB,GAAQH,EAAQuB,kBALtD,SAOE,cAAC,IAAD,cCnCGC,MARf,WACE,OACE,sBAAKnB,UAAU,MAAf,UACE,cAACoB,EAAA,EAAD,IACA,cAAC,EAAD,QCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ee3e3491.chunk.js","sourcesContent":["import React from \"react\"\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n    root: {\r\n        display: 'flex',\r\n      },\r\n      appBar: {\r\n        backgroundColor : 'transparent',\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n      }\r\n    })\r\n)\r\n\r\nfunction Header() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleDrawerOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n      setOpen(false);\r\n    };\r\n    return (\r\n      <div className=\"Header\">\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n             <Typography component=\"h1\" variant=\"h6\" color=\"primary\" noWrap className={classes.title}>\r\n              YOU EYE THE UI\r\n            </Typography>\r\n          <IconButton\r\n            edge=\"end\"\r\n            color=\"primary\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n  export default Header;\r\n  ","import './App.css';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Header from \"./Header\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <Header/>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}